import telebot
from telebot import types
from datetime import datetime
from time import sleep

bot = telebot.TeleBot('5038164782:AAG7koIwUCUgdB92eL1PiqTdIplWhmpdxM0')

stage = 0
complete_stage = types.InlineKeyboardMarkup()
complete_stage_button = types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='complete_stage')
complete_stage.add(complete_stage_button)

current_year = datetime.now().year


def course_variables(call):
    bot.send_message(call.message.chat.id, "–ü–µ—Ä–≤—ã–º –¥–µ–ª–æ–º –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –ø–µ—Ä–µ–ø–µ–Ω–Ω—ã–º–∏")
    bot.send_message(call.message.chat.id, "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç –∏–∑ —Å–µ–±—è –Ω–µ–∫—É—é –∫–æ—Ä–æ–±–æ—á–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")
    bot.send_message(call.message.chat.id, "–ù–∞–ø—Ä–∏–º–µ—Ä —è—â–∏–∫ = —è–±–ª–æ–∫–∏ + –∞–ø–µ–ª—å—Å–∏–Ω—ã.", reply_markup=complete_stage)


def course_variables_types(call):
    bot.send_message(call.message.chat.id, "–¢–µ–ø–µ—Ä—å —É–∑–Ω–∞–µ–º, –∫–∞–∫–∏—Ö –≤–∏–¥–æ–≤ –±—ã–≤–∞—é—Ç –Ω–∞—à–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")
    bot.send_photo(call.message.chat.id, photo=open("content/–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.png", 'rb'))
    variables_types = """
    –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—ã–≤–∞—é—Ç 5 –≤–∏–¥–æ–≤:
    - –°—Ç—Ä–æ–∫–∞ str
    - –ß–∏—Å–ª–æ int
    - –°–ø–∏—Å–æ–∫ list
    - –°–ª–æ–≤–∞—Ä—å dict
    - –ü—Ä–∞–≤–¥–∞/–ù–µ–ø—Ä–∞–≤–¥–∞ bool
    """
    bot.send_message(call.message.chat.id, variables_types, reply_markup=complete_stage)


def course_print(call):
    bot.send_message(call.message.chat.id, "–¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ –º—ã –∑–Ω–∞–µ–º, —á—Ç–æ —Ç–∞–∫–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –º—ã –º–æ–∂–µ–º –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Å–∞–º–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é!")
    bot.send_photo(call.message.chat.id, photo=open("content/Print.png", 'rb'))
    bot.send_message(call.message.chat.id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –∫–æ–º–∞–Ω–¥–æ–π 'print()'.")
    bot.send_message(call.message.chat.id, "–û–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç –Ω—É–∂–Ω—ã–π –Ω–∞–º —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å")
    bot.send_message(call.message.chat.id, '–¢–∞–∫-–∂–µ –µ—Å—Ç—å –Ω–µ–∫–∏–µ f-—Å—Ç—Ä–æ–∫–∏ –æ–Ω–∏ –≤—ã–≥–ª—è–¥—è—Ç —Ç–∞–∫ "print(f"{–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è} –ª—é–±–æ–π —Ç–µ–∫—Å—Ç" ', reply_markup=complete_stage)


def course_print_practice(call):
    test_keyboard = types.InlineKeyboardMarkup()
    answer_1 = types.InlineKeyboardButton(text='3', callback_data='right')
    answer_2 = types.InlineKeyboardButton(text='+ 3', callback_data='wrong')
    answer_3 = types.InlineKeyboardButton(text='9', callback_data='wrong')
    test_keyboard.add(answer_1)
    test_keyboard.add(answer_2)
    test_keyboard.add(answer_3)
    bot.send_photo(call.message.chat.id, photo=open("content/print_test.png", 'rb'))
    bot.send_message(call.message.chat.id, "–ö–∞–∫–æ–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ —Å—Ç–æ—è—Ç—å –≤–º–µ—Å—Ç–æ –≤–æ–ø—Ä–æ—Å–∞?", reply_markup=test_keyboard)


def course_hard_print_practice(call):
    hard_test_keyboard = types.InlineKeyboardMarkup()
    answer_1 = types.InlineKeyboardButton(text='Python', callback_data='right')
    answer_2 = types.InlineKeyboardButton(text='Py+th+on', callback_data='wrong')
    hard_test_keyboard.add(answer_1)
    hard_test_keyboard.add(answer_2)
    bot.send_photo(call.message.chat.id, photo=open("content/print_test2.png", 'rb'))
    bot.send_message(call.message.chat.id, "–ö–∞–∫ –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–µ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑?", reply_markup=hard_test_keyboard)


def course_python_logic(call):
    bot.send_message(call.message.chat.id, "–¢–µ–ø–µ—Ä—å –º—ã –∑–Ω–∞–µ–º —É–∂–µ 1 –∫—Ä—É—Ç—É—é –∫–æ–º–∞–Ω–¥—É –≤ –ø–∏—Ç–æ–Ω–µ! üòâ ")
    bot.send_message(call.message.chat.id, "–ù–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ if, elif, else")
    bot.send_message(call.message.chat.id, 'if –≤ –ø–µ—Ä–µ–≤–æ–¥–µ "–ï—Å–ª–∏". –í –ø–∏—Ç–æ–Ω–µ –∑–∞—á–∞—Å—Ç—É—é –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–∞–∫: "–ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–µ–Ω–∞—è == —á–µ–º—É-—Ç–æ, —Ç–æ –≤—ã–ø–æ–ª–Ω—è—é —ç—Ç–æ." ')
    bot.send_message(call.message.chat.id, 'elif –∏—Å–ø–æ–ª—å–∑—É–µ—Ç, –≤ –¥—Ä—É–≥–æ–º üëâ –ö–û–ù–ö–†–ï–¢–ù–û–ú üëà —Å–ª—É—á–∞–µ')
    bot.send_message(call.message.chat.id, 'else –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –≤ –¥—Ä—É–≥–æ–º üëâ –õ–Æ–ë–û–ú üëà —Å–ª—É—á–∞–µ')
    bot.send_photo(call.message.chat.id, photo=open("content/–£—Å–ª–æ–≤–∏–µ if.png", 'rb'), reply_markup=complete_stage)
    bot.send_message(call.message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∞–º–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∫–æ–¥ —Å —É—Å–ª–æ–≤–∏—è–º–∏ üòâ ')


def course_cycles(call):
    bot.send_message(call.message.chat.id, "–ú—ã —É–∂–µ —É–∑–Ω–∞–ª–∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –ø–∏—Ç–æ–Ω–µ! ü§Ø ")
    bot.send_message(call.message.chat.id, "–ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –¥–ª—è —Ü–∏–∫–ª–æ–≤")
    bot.send_photo(call.message.chat.id, photo=open("content/–¶–∏–∫–ª for.png", 'rb'))
    bot.send_message(call.message.chat.id, "–¶–∏–∫–ª –∫–∞–∫ –±—ã –±–µ–∂–∏—Ç üèÉ –ø–æ —Å–ø–∏—Å–∫—É, –ø–µ—Ä–µ–±–∏—Ä–∞—è –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –ø—Ä–∏—Å–≤–∞–π–≤–∞—è –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π i")
    bot.send_photo(call.message.chat.id, photo=open("content/–¶–∏–∫–ª while.png", 'rb'))
    bot.send_message(call.message.chat.id, "–¶–∏–∫–ª while —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç, —Ç–æ –∏–ª–∏ –∏–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ", reply_markup=complete_stage)
    bot.send_photo(call.message.chat.id, photo=open("content/–®–ø–∞—Ä–≥–∞–ª–∫–∞1.png", 'rb'))
    bot.send_photo(call.message.chat.id, photo=open("content/–®–ø–∞—Ä–≥–∞–ª–∫–∞2.png", 'rb'))
    bot.send_message(call.message.chat.id, "–≠—Ç–∏ –∂–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –≤ —É—Å–ª–æ–≤–∏—è—Ö üòå ")


def course_functions(call):
    bot.send_message(call.message.chat.id, "–í–æ—Ç –º—ã —É–∂–µ –ø–æ—á—Ç–∏ –∏–∑—É—á–∏–ª–∏ –ø–æ—á—Ç–∏ –≤—Å–µ –±–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ Python üêç ")
    bot.send_message(call.message.chat.id, "–û—Å—Ç–∞–ª–æ—Å—å —É–∑–Ω–∞—Ç—å, —á—Ç–æ —Ç–∞–∫–æ–π –§–£–ù–ö–¶–ò–ò üëë ")
    bot.send_message(call.message.chat.id, "–§—É–Ω–∫—Ü–∏–∏ —ç—Ç–æ –Ω–µ–∫–∞—è –±–æ–ª—å—à–∞—è –∫–æ—Ä–æ–±–∫–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏, —É—Å–ª–æ–≤–∏—è–º–∏, –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏.")
    bot.send_message(call.message.chat.id, "–ß—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç —á–∞—â–µ —Ñ—É–Ω–∫—Ü–∏–∏, —á–µ–º —Ü–∏–∫–ª—ã.")
    bot.send_photo(call.message.chat.id, photo=open("content/–§—É–Ω–∫—Ü–∏–∏.png", 'rb'), reply_markup=complete_stage)


def course_imports(call):
    bot.send_message(call.message.chat.id, "–ú—ã —É–∂–µ –ø–æ–¥—Ö–æ–¥–∏–º –∫ –∫–æ–Ω—Ü—É –Ω–∞—à–µ–≥–æ –∫—É—Ä—Å–∞.")
    bot.send_message(call.message.chat.id, "–í—ã –Ω–∞–≤–µ—Ä–Ω–æ–µ —Å–∫–∞–∂–µ—Ç–µ, —á—Ç–æ Python –¥–æ–≤–æ–ª—å–Ω–æ –ª—ë–≥–∫–∏–π, –Ω–æ –ø–æ—á–µ–º—É –∂–µ –æ–Ω —Ç–∞–∫ –ø–æ–ø—É–ª—è—Ä–µ–Ω?...")
    sleep(5.5)
    bot.send_photo(call.message.chat.id, photo=open("content/–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏.png", 'rb'))
    bot.send_message(call.message.chat.id, "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –æ—Ç —Ä–∞–∑–Ω—ã—Ö –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –ò—Ö –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏ –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ –ü–∏—Ç–æ–Ω –æ—á–µ–Ω—å –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω üëç ")
    bot.send_message(call.message.chat.id, "(pip –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, —Ç–æ–ª—å–∫–æ, –µ—Å–ª–∏ —É –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω python –Ω–∞ –ü–ö)", reply_markup=complete_stage)


def course_clean_code(call):
    bot.send_message(call.message.chat.id, "–ù–∞ –ø–æ—Å–ª–µ–¥–æ–∫ —Ö–æ—á—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∫–∞–∫ –ø–∏—Å–∞—Ç—å —á–∏—Å—Ç—ã–π –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π –∫–æ–¥")
    bot.send_message(call.message.chat.id, "- –ù–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏")
    bot.send_message(call.message.chat.id, "- –î–µ–ª–∞–π—Ç–µ –æ—Ç—Å—Ç—É–ø—ã")
    bot.send_message(call.message.chat.id, "- –ü–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–∞–π—Ç–æ–º PEP8 online (http://pep8online.com)")
    bot.send_message(call.message.chat.id, "- –ü–∏—à–∏—Ç–µ –∫–æ–¥ –ø–æ —à–∞–±–ª–æ–Ω—É: –≤ –Ω–∞—á–∞–ª–µ import'—ã, –ø–æ—Ç–æ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, –ø–æ—Ç–æ–º —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ—Ç–æ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π", reply_markup=complete_stage)


def the_end(call):
    bot.send_message(call.message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —Ç–µ–ø–µ—Ä—å –∫–æ—Ä–æ–ª–∏ Python'–∞! üëë ")
    bot.send_message(call.message.chat.id, "–ö—É—Ä—Å –æ–∫–æ–Ω—á–µ–Ω, —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ—Å—å –∏ —Å—Ç—Ä–µ–º–∏—Ç—å –∫ —Å–≤–æ–∏–º –≤—ã—Å–æ—Ç–∞–º üí™ ")


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "–ù–∞—á–∞—Ç—å" or "–Ω–∞—á–∞—Ç—å":
        intro_keyboard = types.InlineKeyboardMarkup()
        start_intro = types.InlineKeyboardButton(text='–î–∞, –≥–æ—Ç–æ–≤(-–∞)', callback_data='Yes')
        intro_keyboard.add(start_intro)
        bot.send_photo(message.from_user.id, photo=open("content/–∫—É—Ä—Å.png", 'rb'))
        bot.send_message(message.from_user.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à–æ–π –∫—É—Ä—Å –ø–æ –∏–∑—É—á–µ–Ω–∏—é —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è python?", reply_markup=intro_keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if call.data == "Yes":
        course_keyboard = types.InlineKeyboardMarkup()
        start_course = types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å', callback_data='start_course')
        course_keyboard.add(start_course)
        bot.send_message(call.message.chat.id, '–ù–∞—á–Ω—ë–º! –î–ª—è —á–µ–≥–æ –∂–µ –≤–æ–æ–±—â–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏–µ?')
        bot.send_message(call.message.chat.id, '–ü—Ä–æ–≥—Ä–∞–º–º–∏–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º, –æ–±–ª–µ–≥—á–∞—é—â–∏—Ö –Ω–∞–º –∂–∏–∑–Ω—å. –ù–∞–ø—Ä–∏–º–µ—Ä –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤, —ç—Ç–æ –ø–æ —Å—É—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã.')
        bot.send_photo(call.message.chat.id, photo=open("content/–ø—Ä–æ–≥—Ä–∞–º–º–∞.png", 'rb'), reply_markup=course_keyboard)

    elif call.data == "start_course":
        bot.send_message(call.message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–µ–º —Å–∞–π—Ç, –≥–¥–µ –º—ã –±—É–¥–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã')
        bot.send_message(call.message.chat.id, 'https://www.online-python.com')
        bot.send_message(call.message.chat.id, '–ò —É–¥–∞–ª–∏–º –≤—Å—ë –Ω–µ–Ω—É–∂–Ω–æ–µ')
        bot.send_photo(call.message.chat.id, photo=open("content/—á–∏—Å—Ç–æ—Ç–∞.png", 'rb'), reply_markup=complete_stage)

    elif call.data == "complete_stage":
        def stage_promotion():
            global stage
            stage = stage + 1
        stage_promotion()
        if stage == 1:
            course_variables(call)
        elif stage == 2:
            course_variables_types(call)
        elif stage == 3:
            course_print(call)
        elif stage == 4:
            course_print_practice(call)
        elif stage == 5:
            course_hard_print_practice(call)
        elif stage == 6:
            course_python_logic(call)
        elif stage == 7:
            course_cycles(call)
        elif stage == 8:
            course_functions(call)
        elif stage == 9:
            course_imports(call)
        elif stage == 10:
            course_clean_code(call)
        elif stage == 11:
            the_end(call)
    elif call.data == 'wrong':
        bot.send_message(call.message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —ç—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ üò¢ ")
    elif call.data == 'right':
        bot.send_message(call.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –û—Ç–≤–µ—Ç –≤–µ—Ä–Ω—ã–π üòÉ ", reply_markup=complete_stage)
bot.polling(none_stop=True, interval=0)
